services:
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage

  data-vector-manager:
    build:
      context: ./data-vector-manager
      dockerfile: ../Dockerfile
    environment:
      QDRANT_URL: http://qdrant:6333
      SERVER_NAME: 0.0.0.0:8001
      FLASK_ENV: development
    env_file:
      - ./data-vector-manager/.env
    ports:
      - 8001:8001
    expose:
      - 8001
    depends_on:
      - qdrant

  augmented-generation:
    build:
      context: ./augmented-generation
      dockerfile: ../Dockerfile
    environment:
      SERVER_NAME: 0.0.0.0:8002
      FLASK_ENV: development
      DOCUMENTS_SEARCH_URL: http://data-vector-manager:8001/api/v1/documents/search
      LLM_ESTIMATION_URL: http://llm-audit:8003/api/v1/estimate
    env_file:
      - ./augmented-generation/.env
    ports:
      - 8002:8002
    expose:
      - 8002

  llm-audit:
    build:
      context: ./llm-audit
      dockerfile: ../Dockerfile
    environment:
      SERVER_NAME: 0.0.0.0:8003
      FLASK_ENV: development
    env_file:
      - ./llm-audit/.env
    ports:
      - 8003:8003
    expose:
      - 8003

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: ../Dockerfile
    environment:
      RAG_URL: http://augmented-generation:8002/api/v1/generation
    command:
      - uv
      - run
      - fastmcp
      - run
    ports:
      - 3000:3000
    expose:
      - 3000

configs:
  qdrant_config:
    content: |
      log_level: INFO

networks:
  ai-network:
    driver: bridge
